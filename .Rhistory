find.package("devtools")
install.packages("devtools")
library(devtools)
find_Rtools()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
setwd("C:/Users/Sankarasubramanian/Desktop/workspace")
setwd("C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2")
dir(9)
dir()
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
}
m
makecachematirx(1:6,2,3)
makecacheMatirx(1:6,2,3)
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatirx(1:6,2,3)
x<-matrix(1:6,2,3)
x
makeCacheMatirx(x)
set(x)
get(x)
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
setmatrix=setmatrix,
x<-matrix(1:6,2,3)
cacheSolver(x)
cacheSolve(x)
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
cachemean(x)
x<numeric(1:8)
x<vector(1:8)
x<-vector(1:8)
x<-1:8
x
cachemean(x)
z <- matrix(c(4,2,7,6), nrow = 2, ncol = 2)
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
z
x<-makeCacheMatrix(z)
x
cacheSolve(x)
source('C:/Users/Sankarasubramanian/Desktop/workspace/datasciencecoursera/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
z <- matrix(c(3,3,7,6), nrow = 2, ncol = 2)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<- matrix(sample.int(100,size=9,replace=TRUE), nrow=3)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<- matrix(sample.int(100,size=16,replace=TRUE), nrow=3)
z<- matrix(sample.int(100,size=16,replace=TRUE), nrow=4)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<- matrix(sample.int(100,size=9,replace=TRUE), nrow=3)
x<-makeCacheMatrix(z)
cacheSolve(x)
z<- matrix(sample.int(100,size=25,replace=TRUE), nrow=5)
x<-makeCacheMatrix(z)
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(x)
